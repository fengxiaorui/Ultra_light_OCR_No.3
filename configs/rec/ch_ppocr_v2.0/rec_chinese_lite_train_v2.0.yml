Global:
  use_gpu: True
  epoch_num: 100
  log_smooth_window: 20
  print_batch_step: 1000
  save_model_dir: ./output/rec_chinese_lite_v2.0_0709
  save_epoch_step: 3
  # evaluation is run every 5000 iterations after the 4000th iteration
  eval_batch_step: [0, 1000]
  cal_metric_during_train: False
  pretrained_model: ./pretrain_models/best_accuracy
  checkpoints: 
  save_inference_dir:
  use_visualdl: False
  infer_img: doc/imgs_words/ch/word_1.jpg
  # for data or label process
  character_dict_path: ./train_data/label_dict.txt
  character_type: ch
  max_text_length: 28
  infer_mode: False
  use_space_char: True
  save_res_path: ./output/rec/predicts_chinese_lite_v2.0.txt


Optimizer:
  name: Adam
  beta1: 0.9
  beta2: 0.999
  lr:
    name: Cosine
    learning_rate: 0.00005
  regularizer:
    name: 'L2'
    factor: 0.00001

Architecture:
  model_type: rec
  algorithm: CRNN
  Transform:
  Backbone:
    name: MobileNetV3
    scale: 1
    model_name: small
    small_stride: [1, 2, 2, 2]
  Neck:
    name: SequenceEncoder
    encoder_type: rnn
    hidden_size: 64
  Head:
    name: CTCHead
    fc_decay: 0.00004

Loss:
  name: CTCLoss

PostProcess:
  name: CTCLabelDecode

# Architecture:
#   model_type: rec
#   algorithm: MTL #MTL #CRNN
#   Transform:
#   Backbone:
#     name: MobileNetV3
#     scale: 1
#     model_name: small
#     small_stride: [1, 2, 2, 2]
#   Neck:
#     name: SequenceEncoder
#     encoder_type: rnn
#     hidden_size: 64 #64
#   Head:
#     name: MTLHead #MTLHead #CTCHead
#     hidden_size: 96 #96
#     fc_decay: 0.00001

# Loss:
#   name: MTLLoss #MTLLoss #CTCLoss

# PostProcess:
#   name: MTLLabelDecode #MTLLabelDecode #CTCLabelDecode #MTLLabelDecode

Metric:
  name: RecMetric
  main_indicator: acc

Train:
  dataset:
    name: SimpleDataSet
    data_dir: ./train_data/train_rgb/
    label_file_list: ["./train_rgb/train_20210611(copy).txt"]
    transforms:
      - DecodeImage: # load image
          img_mode: BGR
          channel_first: False
      - RecAug: 
      - CTCLabelEncode: # Class handling label
      - RecResizeImg:
          image_shape: [3, 32, 320]
      - KeepKeys:
          keep_keys: ['image', 'label', 'length'] # dataloader will return list in this order
  loader:
    shuffle: True
    batch_size_per_card: 168
    drop_last: True
    num_workers: 8

Eval:
  dataset:
    name: SimpleDataSet
    data_dir: ./train_data/train_rgb/
    label_file_list: ["./train_data/train_rgb/Test_0.1.txt"]
    transforms:
      - DecodeImage: # load image
          img_mode: BGR
          channel_first: False
      - CTCLabelEncode: # Class handling label
      - RecResizeImg:
          image_shape: [3, 32, 320]
      - KeepKeys:
          keep_keys: ['image', 'label', 'length'] # dataloader will return list in this order
  loader:
    shuffle: False
    drop_last: False
    batch_size_per_card: 128
    num_workers: 8
